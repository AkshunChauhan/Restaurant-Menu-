{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshun chauhan\\\\Desktop\\\\finaltest\\\\foodmine-react-js\\\\frontend\\\\src\\\\components\\\\PaypalButtons\\\\PaypalButtons.js\",\n  _s = $RefreshSig$();\nimport { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport React, { useEffect } from 'react';\nimport { useLoading } from '../../hooks/useLoading';\nimport { pay } from '../../services/orderService';\nimport { useCart } from '../../hooks/useCart';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaypalButtons(_ref) {\n  let {\n    order\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      clientId: 'AUWcnaHjOUoXVI3IjLpMkM0Kk0Sigq1CUAWP-finHI950yQD2Qni8XPkRbs76Q-_JIT8hJFhKD8YVy3u'\n    },\n    children: /*#__PURE__*/_jsxDEV(Buttons, {\n      order: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = PaypalButtons;\nfunction Buttons(_ref2) {\n  _s();\n  let {\n    order\n  } = _ref2;\n  const {\n    clearCart\n  } = useCart();\n  const navigate = useNavigate();\n  const [{\n    isPending\n  }] = usePayPalScriptReducer();\n  const {\n    showLoading,\n    hideLoading\n  } = useLoading();\n  useEffect(() => {\n    isPending ? showLoading() : hideLoading();\n  });\n  const createOrder = (data, actions) => {\n    return actions.order.create({\n      purchase_units: [{\n        amount: {\n          currency_code: 'USD',\n          value: order.totalPrice\n        }\n      }]\n    });\n  };\n  const onApprove = async (data, actions) => {\n    try {\n      const payment = await actions.order.capture();\n      const orderId = await pay(payment.id);\n      clearCart();\n      toast.success('Payment Saved Successfully', 'Success');\n      navigate('/track/' + orderId);\n    } catch (error) {\n      toast.error('Payment Save Failed', 'Error');\n    }\n  };\n  const onError = err => {\n    toast.error('Payment Failed', 'Error');\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    createOrder: createOrder,\n    onApprove: onApprove,\n    onError: onError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Buttons, \"2N+KNw3b1ixMDQbSBfz9Mstx7dE=\", false, function () {\n  return [useCart, useNavigate, usePayPalScriptReducer, useLoading];\n});\n_c2 = Buttons;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaypalButtons\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"names":["PayPalButtons","PayPalScriptProvider","usePayPalScriptReducer","React","useEffect","useLoading","pay","useCart","toast","useNavigate","jsxDEV","_jsxDEV","PaypalButtons","_ref","order","options","clientId","children","Buttons","fileName","_jsxFileName","lineNumber","columnNumber","_c","_ref2","_s","clearCart","navigate","isPending","showLoading","hideLoading","createOrder","data","actions","create","purchase_units","amount","currency_code","value","totalPrice","onApprove","payment","capture","orderId","id","success","error","onError","err","_c2","$RefreshReg$"],"sources":["C:/Users/akshun chauhan/Desktop/finaltest/foodmine-react-js/frontend/src/components/PaypalButtons/PaypalButtons.js"],"sourcesContent":["import {\r\n  PayPalButtons,\r\n  PayPalScriptProvider,\r\n  usePayPalScriptReducer,\r\n} from '@paypal/react-paypal-js';\r\nimport React, { useEffect } from 'react';\r\nimport { useLoading } from '../../hooks/useLoading';\r\nimport { pay } from '../../services/orderService';\r\nimport { useCart } from '../../hooks/useCart';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function PaypalButtons({ order }) {\r\n  return (\r\n    <PayPalScriptProvider\r\n      options={{\r\n        clientId:\r\n          'AUWcnaHjOUoXVI3IjLpMkM0Kk0Sigq1CUAWP-finHI950yQD2Qni8XPkRbs76Q-_JIT8hJFhKD8YVy3u',\r\n      }}\r\n    >\r\n      <Buttons order={order} />\r\n    </PayPalScriptProvider>\r\n  );\r\n}\r\n\r\nfunction Buttons({ order }) {\r\n  const { clearCart } = useCart();\r\n  const navigate = useNavigate();\r\n  const [{ isPending }] = usePayPalScriptReducer();\r\n  const { showLoading, hideLoading } = useLoading();\r\n  useEffect(() => {\r\n    isPending ? showLoading() : hideLoading();\r\n  });\r\n\r\n  const createOrder = (data, actions) => {\r\n    return actions.order.create({\r\n      purchase_units: [\r\n        {\r\n          amount: {\r\n            currency_code: 'USD',\r\n            value: order.totalPrice,\r\n          },\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const onApprove = async (data, actions) => {\r\n    try {\r\n      const payment = await actions.order.capture();\r\n      const orderId = await pay(payment.id);\r\n      clearCart();\r\n      toast.success('Payment Saved Successfully', 'Success');\r\n      navigate('/track/' + orderId);\r\n    } catch (error) {\r\n      toast.error('Payment Save Failed', 'Error');\r\n    }\r\n  };\r\n\r\n  const onError = err => {\r\n    toast.error('Payment Failed', 'Error');\r\n  };\r\n\r\n  return (\r\n    <PayPalButtons\r\n      createOrder={createOrder}\r\n      onApprove={onApprove}\r\n      onError={onError}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}