{"ast":null,"code":"import { toast } from 'react-toastify';\nimport axios from 'axios';\nexport const uploadImage = async event => {\n  let toastId = null;\n  const image = await getImage(event);\n  if (!image) return null;\n  const formData = new FormData();\n  formData.append('image', image, image.name);\n  const response = await axios.post('api/upload', formData, {\n    onUploadProgress: _ref => {\n      let {\n        progress\n      } = _ref;\n      if (toastId) toast.update(toastId, {\n        progress\n      });else toastId = toast.success('Uploading...', {\n        progress\n      });\n    }\n  });\n  toast.dismiss(toastId);\n  return response.data.imageUrl;\n};\nconst getImage = async event => {\n  const files = event.target.files;\n  if (!files || files.length <= 0) {\n    toast.warning('Upload file is nott selected!', 'File Upload');\n    return null;\n  }\n  const file = files[0];\n  if (file.type !== 'image/jpeg') {\n    toast.error('Only JPG type is allowed', 'File Type Error');\n    return null;\n  }\n  return file;\n};","map":{"version":3,"names":["toast","axios","uploadImage","event","toastId","image","getImage","formData","FormData","append","name","response","post","onUploadProgress","_ref","progress","update","success","dismiss","data","imageUrl","files","target","length","warning","file","type","error"],"sources":["C:/Users/akshun chauhan/Desktop/finaltest/foodmine-react-js/frontend/src/services/uploadService.js"],"sourcesContent":["import { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nexport const uploadImage = async event => {\r\n  let toastId = null;\r\n\r\n  const image = await getImage(event);\r\n  if (!image) return null;\r\n\r\n  const formData = new FormData();\r\n  formData.append('image', image, image.name);\r\n  const response = await axios.post('api/upload', formData, {\r\n    onUploadProgress: ({ progress }) => {\r\n      if (toastId) toast.update(toastId, { progress });\r\n      else toastId = toast.success('Uploading...', { progress });\r\n    },\r\n  });\r\n  toast.dismiss(toastId);\r\n  return response.data.imageUrl;\r\n};\r\n\r\nconst getImage = async event => {\r\n  const files = event.target.files;\r\n\r\n  if (!files || files.length <= 0) {\r\n    toast.warning('Upload file is nott selected!', 'File Upload');\r\n    return null;\r\n  }\r\n\r\n  const file = files[0];\r\n\r\n  if (file.type !== 'image/jpeg') {\r\n    toast.error('Only JPG type is allowed', 'File Type Error');\r\n    return null;\r\n  }\r\n\r\n  return file;\r\n};\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAMC,KAAK,IAAI;EACxC,IAAIC,OAAO,GAAG,IAAI;EAElB,MAAMC,KAAK,GAAG,MAAMC,QAAQ,CAACH,KAAK,CAAC;EACnC,IAAI,CAACE,KAAK,EAAE,OAAO,IAAI;EAEvB,MAAME,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,EAAEA,KAAK,CAACK,IAAI,CAAC;EAC3C,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,YAAY,EAAEL,QAAQ,EAAE;IACxDM,gBAAgB,EAAEC,IAAA,IAAkB;MAAA,IAAjB;QAAEC;MAAS,CAAC,GAAAD,IAAA;MAC7B,IAAIV,OAAO,EAAEJ,KAAK,CAACgB,MAAM,CAACZ,OAAO,EAAE;QAAEW;MAAS,CAAC,CAAC,CAAC,KAC5CX,OAAO,GAAGJ,KAAK,CAACiB,OAAO,CAAC,cAAc,EAAE;QAAEF;MAAS,CAAC,CAAC;IAC5D;EACF,CAAC,CAAC;EACFf,KAAK,CAACkB,OAAO,CAACd,OAAO,CAAC;EACtB,OAAOO,QAAQ,CAACQ,IAAI,CAACC,QAAQ;AAC/B,CAAC;AAED,MAAMd,QAAQ,GAAG,MAAMH,KAAK,IAAI;EAC9B,MAAMkB,KAAK,GAAGlB,KAAK,CAACmB,MAAM,CAACD,KAAK;EAEhC,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;IAC/BvB,KAAK,CAACwB,OAAO,CAAC,+BAA+B,EAAE,aAAa,CAAC;IAC7D,OAAO,IAAI;EACb;EAEA,MAAMC,IAAI,GAAGJ,KAAK,CAAC,CAAC,CAAC;EAErB,IAAII,IAAI,CAACC,IAAI,KAAK,YAAY,EAAE;IAC9B1B,KAAK,CAAC2B,KAAK,CAAC,0BAA0B,EAAE,iBAAiB,CAAC;IAC1D,OAAO,IAAI;EACb;EAEA,OAAOF,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}