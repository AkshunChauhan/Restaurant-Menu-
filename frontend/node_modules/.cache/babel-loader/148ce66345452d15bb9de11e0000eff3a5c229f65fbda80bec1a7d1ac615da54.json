{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshun chauhan\\\\Desktop\\\\finaltest\\\\foodmine-react-js\\\\frontend\\\\src\\\\components\\\\Map\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport classes from './map.module.css';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';\nimport { toast } from 'react-toastify';\nimport * as L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Map(_ref) {\n  let {\n    readonly,\n    location,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      className: classes.map,\n      center: [0, 0],\n      zoom: 1,\n      dragging: !readonly,\n      touchZoom: !readonly,\n      doubleClickZoom: !readonly,\n      scrollWheelZoom: !readonly,\n      boxZoom: !readonly,\n      keyboard: !readonly,\n      attributionControl: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FindButtonAndMarker, {\n        readonly: readonly,\n        location: location,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Map;\nfunction FindButtonAndMarker(_ref2) {\n  _s();\n  let {\n    readonly,\n    location,\n    onChange\n  } = _ref2;\n  const [position, setPosition] = useState(location);\n  useEffect(() => {\n    if (readonly) {\n      map.setView(position, 13);\n      return;\n    }\n    if (position) onChange(position);\n  }, [position]);\n  const map = useMapEvents({\n    click(e) {\n      !readonly && setPosition(e.latlng);\n    },\n    locationfound(e) {\n      setPosition(e.latlng);\n      map.flyTo(e.latlng, 13);\n    },\n    locationerror(e) {\n      toast.error(e.message);\n    }\n  });\n  const markerIcon = new L.Icon({\n    iconUrl: '/marker-icon-2x.png',\n    iconSize: [25, 41],\n    iconAnchor: [12.5, 41],\n    popupAnchor: [0, -41]\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!readonly && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: classes.find_location,\n      onClick: () => map.locate(),\n      children: \"Find My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), position && /*#__PURE__*/_jsxDEV(Marker, {\n      eventHandlers: {\n        dragend: e => {\n          setPosition(e.target.getLatLng());\n        }\n      },\n      position: position,\n      draggable: !readonly,\n      icon: markerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: \"Shipping Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(FindButtonAndMarker, \"/+EisjKC8JObz0g2J2glOm4myjM=\", false, function () {\n  return [useMapEvents];\n});\n_c2 = FindButtonAndMarker;\nvar _c, _c2;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"FindButtonAndMarker\");","map":{"version":3,"names":["React","useState","useEffect","classes","MapContainer","TileLayer","Marker","Popup","useMapEvents","toast","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","_ref","readonly","location","onChange","className","container","children","map","center","zoom","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","attributionControl","url","fileName","_jsxFileName","lineNumber","columnNumber","FindButtonAndMarker","_c","_ref2","_s","position","setPosition","setView","click","e","latlng","locationfound","flyTo","locationerror","error","message","markerIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","type","find_location","onClick","locate","eventHandlers","dragend","target","getLatLng","draggable","icon","_c2","$RefreshReg$"],"sources":["C:/Users/akshun chauhan/Desktop/finaltest/foodmine-react-js/frontend/src/components/Map/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport classes from './map.module.css';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  useMapEvents,\r\n} from 'react-leaflet';\r\nimport { toast } from 'react-toastify';\r\nimport * as L from 'leaflet';\r\n\r\nexport default function Map({ readonly, location, onChange }) {\r\n  return (\r\n    <div className={classes.container}>\r\n      <MapContainer\r\n        className={classes.map}\r\n        center={[0, 0]}\r\n        zoom={1}\r\n        dragging={!readonly}\r\n        touchZoom={!readonly}\r\n        doubleClickZoom={!readonly}\r\n        scrollWheelZoom={!readonly}\r\n        boxZoom={!readonly}\r\n        keyboard={!readonly}\r\n        attributionControl={false}\r\n      >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        <FindButtonAndMarker\r\n          readonly={readonly}\r\n          location={location}\r\n          onChange={onChange}\r\n        />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FindButtonAndMarker({ readonly, location, onChange }) {\r\n  const [position, setPosition] = useState(location);\r\n\r\n  useEffect(() => {\r\n    if (readonly) {\r\n      map.setView(position, 13);\r\n      return;\r\n    }\r\n    if (position) onChange(position);\r\n  }, [position]);\r\n\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      !readonly && setPosition(e.latlng);\r\n    },\r\n    locationfound(e) {\r\n      setPosition(e.latlng);\r\n      map.flyTo(e.latlng, 13);\r\n    },\r\n    locationerror(e) {\r\n      toast.error(e.message);\r\n    },\r\n  });\r\n\r\n  const markerIcon = new L.Icon({\r\n    iconUrl: '/marker-icon-2x.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12.5, 41],\r\n    popupAnchor: [0, -41],\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!readonly && (\r\n        <button\r\n          type=\"button\"\r\n          className={classes.find_location}\r\n          onClick={() => map.locate()}\r\n        >\r\n          Find My Location\r\n        </button>\r\n      )}\r\n\r\n      {position && (\r\n        <Marker\r\n          eventHandlers={{\r\n            dragend: e => {\r\n              setPosition(e.target.getLatLng());\r\n            },\r\n          }}\r\n          position={position}\r\n          draggable={!readonly}\r\n          icon={markerIcon}\r\n        >\r\n          <Popup>Shipping Location</Popup>\r\n        </Marker>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}